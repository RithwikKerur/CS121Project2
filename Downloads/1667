https://www.ics.uci.edu/~nicolau



Alex Nicolau's Home Page











Center for Embedded Computer Systems


University of California, Irvine




Alex Nicolau





Contact Info

Office: CECS (IERF) 204 (directions)
Phone: +1 (949) 824-4079
Personal Fax: +1 (949) 824-4079
Alt. Fax: +1 (949) 824-8019
Email: nicolau@ics.uci.edu
Assistant: Melanie
	Sanders (email)

Mail Address:

	Professor Alex Nicolau
	Center for Embedded Computer Systems
	444 CS, University of California
	Irvine, CA 92697-3425, USA






Research Interests
        Parallelizing
  Compilers, High-Performance Java, Power-aware Computing, Reconfigurable Computing.


Current Projects




Julius C: Compiler Optimizations for Divide and Conquer Applications


  Julius C is a C compiler that determines a model for divide and
  conquer algorithms. The model is an extension of the call graph and it
  conceives information about the dynamic behavior of the algorithm. The
  use of the model is twofold: at compile time, the model drives code
  generation and code optimizations; at run time, the model offers a
  support driving code execution, code adaptation and hardware
  adaptation.
  



EXPRESS Retargetable Compiler


  EXPRESS is an optimizing, memory-aware, Instruction Level
  Parallelizing (ILP) compiler. EXPRESS uses the EXPRESSION ADL to
  retarget itself to a wide class of processor architectures and memory
  systems. The inputs to EXPRESS are the application specified in C, and
  the processor architecture specified in EXPRESSION. The front-end is
  GCC-based and performs some of conventional optimizations. The core
  transformations in EXPRESS include RDLP -- a loop pipelining
  technique, TiPS : Trailblazing Percolation Scheduling -- a speculative
  code motion technique, Instruction Selection, Register Allocation and
  If-Conversion -- a technique for architectures with predicated
  Instruction Sets. The back-end generates assembly code for the
  processor ISA.
  



FORGE: A Framework for Optimization of Distributed Embedded Systems Software


  The FORGE project is a framework for optimization of distributed
  embedded systems software, which integrates the middleware abstraction
  layer with the hardware/OS abstraction layer and studies mechanisms
  for capturing resources/architectures at these two levels and allowing
  interactions between the levels. A resource description language
  (RDL) specifying the composition of the system as well as
  resource constraints can be used by a compiler for
  automatically generating the necessary services and middleware
  configuration and their deployment across the platform.
  



SPARK: High-Level Synthesis using Parallelizing Compiler Techniques


  SPARK is a C-to-VHDL high-level synthesis framework that employs a set of
  innovative compiler, parallelizing compiler, and synthesis transformations
  to improve the quality of high-level synthesis results. The compiler
  transformations have been re-instrumented for synthesis by incorporating
  ideas of mutual exclusivity of operations, resource sharing and hardware
  cost models.
  



CoReComp: A
	Compiler Framework for Mapping Applications on Mesh-Based
	Coarse-Grain Reconfigurable Architectures


Coarse-grain reconfigurable architectures trade-off some of the configuration flexibility of fine-grain FPGAs in return for smaller delay, area and configuration time. They provide massive parallelism, high computational capability and their behavior can be configured dynamically, thus making them a better alternative to ASICs and fine-grain FPGAs in many aspects. Mapping applications to such architectures is a complex task that is a combination of the traditional operation scheduling, operation to PE binding (or mapping), and routing problems. The focus of this research is to build a compiler framework which should be capable of mapping applications on reconfigurable architectures by taking into account different architecture and application parameters.
  





Past Projects




Annotation-Aware Java Virtual Machines




AMRM: Adaptive Memory Reconfiguration and Management




COPPER: Compiler-Controlled Continuous Power-Performance Management




  Cache Power Optimization via Run-time Hardware Prediction
  



  EVE Mutation Scheduling Compiler
  





Teaching


ICS 144 - High Performance Compilers and Program Optimizations (Spring '04)


ICS 249 - Seminar in Parallel Distributed and Network Systems (Winter '04)



ICS 245 - High Performance Architectures and Their Compilers (Winter '03)


ICS 51 - Introductory Computer Organization (Winter '02)




Affiliated Ph.D. Students



	Weiyu Tang
    

Paolo Nicola D'Alberto


Radu Cornea






	Arun Kejariwal
    

Nikhil Bansal


Carmen Badea





Previous Ph.D. Students



	Alexander Aiken (Graduated, 1988)
    

	Laurie Hendren (Graduated, 1990)
    

	Roni Potasman (Graduated)
    

	Ki Kim (Graduated)
    

	Haigeng Wang (Graduated)
    





	Steve Novack (Graduated, 1992)
    

	Srinivas Mantripagada (Graduated)
    

	Joseph Hummel (Graduated, 1998)
    

David Kolson (Graduated, 1996)


Ana Azevedo Pazos (Graduated, 2002)





Other Ph.D. Degrees Supervised



Prabhat Mishra (Graduated, 2004)


Sumit Gupta (Graduated, 2003)




Peter Grun (Graduated, 2001)


	Preeti Ranjan Panda (Graduated, 1997)
    




Selected Publications (most recent first)


Proxy-based Task Partitioning of Watermarking Algorithms for Reducing Energy Consumption in Mobile Devices
	Arun Kejariwal, Sumit Gupta, Alexandru Nicolau, Nikil Dutt, Rajesh Gupta,
	Design Automation Conference (DAC), June 2004.
    

Optimized Performance of Applets and Services in an Annotation-aware JVM for Smart Cards
	Ana Azevedo, Arun Kejariwal, Alex Veidenbaum and Alex Nicolau,
	International Workshop Construction and Analysis of Safe,
	Secure and Interoperable Smart Devices (CASSIS), March 2004.
    

Network Topology Exploration of Mesh-Based Reconfigurable Architectures
	Nikhil Bansal, Sumit Gupta, Rajesh Gupta, Nikil Dutt and Alex
	Nicolau,
	Design Automation and Test in Europe (DATE), February 2004.
    

Analysis of the Performance of Coarse-Grain Reconfigurable Architectures with Different Processing Element Configurations
	Nikhil Bansal, Sumit Gupta, Nikil Dutt and Alex Nicolau,
	Workshop on Architecture Specific Processors (WASP), December 2003.
    

Managing Cross-Layer Constraints for Interactive Mobile Multimedia
	Radu Cornea, Shivajit Mohapatra, Nikil Dutt, Alex Nicolau and Nalini Venkatasubramanian,
	Workshop on Constraint-Aware Embedded Software (WCAS), IEEE Real-Time Systems Symposium, December 2003.
    

Integrated Power Management for Video Streaming to Mobile Handheld Devices
	Shivajit Mohapatra, Radu Cornea, Nikil Dutt, Alex Nicolau and Nalini Venkatasubramanian,
	ACM Multimedia (ACMMM), November 2003.
    

A Data Cache with Dynamic Mapping
	Paolo D'Alberto, Alex Nicolau and Alex Veidenbaum,
	Workshop on Languages and Compilers for Parallel Computing (WLCPC),
	2003.
    



Professional Services (abridged)


	Editor in Chief, International Journal of Parallel Programming
    

	ICS 2004 - Program Committee member
    

	LCTES 2001 and 2002 - Program Committee member
    

	SCOPES 2001 and 2002 - Program Committee member
    

	IWACT 2001 - Program Co-Chair
    

	NATO Advanced Workshop on Distributed Computing for Clusters, Grids and Embedded Systems 2003 - Co-Director
    





Last modified: Wed Mar 17 15:55:59 PST 2004


XHTML 1.1 Checked  



