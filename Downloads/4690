https://grape.ics.uci.edu/wiki/public/wiki/cs222-2018-fall-setup-gdb-on-macos




      cs222-2018-fall-setup-gdb-on-macos – Public
    
































LoginPreferencesAbout Trac







wiki:cs222-2018-fall-setup-gdb-on-macos


Context Navigation

Start PageIndexHistory





Setup GDB on MacOS

This guide details the set up of the GDB debugger on MacOS High Sierra 10.13.6. It works as of Sep 26th, 2018. Please be alerted it is not straightforward to do this. If you spend too much time but still cannot make GDB work properly on your MacOS, an intermediate solution is to install a LinuxVM to do the development.

Install homebrew (a package manager for mac). /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
Install GDB 8.0.1. Be alerted that the latest GDB version(8.11) cannot work properly with MacOS because of some bugs. Instead, we have to explicitly install an older version of GDB.
brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/9ec9fb27a33698fc7636afce5c1c16787e9ce3f3/Formula/gdb.rb
brew pin gdb
Type gdb --version, make sure you find the version is 8.0.1.
Type echo "set startup-with-shell off" >> ~/.gdbinit
Certify the installed gdb
Open Keychain Access (an app under Utilities folder)
In menu, open Keychain Access > Certificate Assistant > Create a certificate
Give it a name (e.g. gdb-cert). Identity type: Self Signed Root. Certificate type: Code Signing. Check: let me override defaults.
Continue until "specify a location for..."
Set Keychain location to System
Create certificate and close Certificate Assistant.
Find certificate (e.g., gdb-cert) in System keychain.
Double click the certificate
Expand Trust, set Code signing to always trust
Restart taskgated in terminal: killall taskgated
Codesign gdb using your certificate: codesign -fs gdb-cert /usr/local/bin/gdb
Now let's check whether GDB works. Open eclipse, right click your project cs222, and click Debug As -> Debug Configurations. Add your main program (one of the test cases), and configure the path of the GDB properly (typically its under /usr/local/bin/gdb, and command file is /Users/username/.gdbinit). Finally click Debug to see if works.



If you see your program stops at the first line of the main function, and you can use Step Into (F5), Step Over (F6) etc. properly, then your GDB is now working properly! Congratulations!
Otherwise, let's try this step to disable the SIP (system integrity projection) of MacOS. Note: disabling SIP could result in security leaks of your system, and you should decide whether to continue based on your own risk!
Shut down your mac and restart in recovery mode (hold down command+R until apple logo appears)
Open terminal window
Modify System Integrity Protection to allow debugging: csrutil enable --without debug
Reboot your Mac
Go back to step 6 to try again. It should work now, but it still doesn't work, you can checkout some other materials. ​Stackoverflow ​Setup GDB on MacOS. If it still doesn't work, maybe it's better to switch to a linux virtual machine.


Last modified 4 years ago
Last modified on Sep 28, 2018 2:00:12 PM



Attachments (1)



gdb.png​
       (395.6 KB) -
      added by cluo8 4 years ago.
              


            Download all attachments as: .zip





Download in other formats:


Plain Text






Powered by Trac 1.0.13
        By Edgewall Software.
Visit the Trac open source project athttp://trac.edgewall.org/


